{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728382751925}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Логунов Егор Викторович"],"metadata":{"id":"warQzNZ16yJZ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10%.\n","*  Для заказов стоимостью более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20%.\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1000\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4750.0\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["#Этап 1\n","\n","print('Введите стоимость единицы товара')\n","sel = int(input())\n","print('Введите количество товара')\n","count = int(input())\n","print('Введите промокод')\n","disc = input()\n","\n","sm = sel * count\n","c = 0\n","\n","if sel > 5000 and count > 1000 and disc == 'SUPERDISCOUNT':\n","  c = 25\n","\n","elif count > 1000 and sel > 5000:\n","  c = 20\n","\n","elif count > 1000 and disc == 'SUPERDISCOUNT':\n","  c = 15\n","\n","elif count > 1000:\n","  c = 5\n","\n","elif sel  > 5000 and disc == 'SUPERDISCOUNT':\n","  c = 20\n","\n","elif sel  > 5000:\n","  c = 15\n","\n","elif disc == 'SUPERDISCOUNT':\n","  c = 10\n","\n","else:\n","  c = 0\n","\n","sm = sm - ((sm//100) * c)\n","\n","print('Ваша скидка:', c, '%')\n","print('Итоговая сумма:', sm)\n","\n","#Этап 2\n","def discounter(sel, count, disc):\n","  sm = sel * count\n","  c = 0\n","\n","  if sel > 5000 and count > 1000 and disc == 'SUPERDISCOUNT':\n","    c = 25\n","\n","  elif count > 1000 and sel > 5000:\n","    c = 20\n","\n","  elif count > 1000 and disc == 'SUPERDISCOUNT':\n","    c = 15\n","\n","  elif count > 1000:\n","    c = 5\n","\n","  elif sel  > 5000 and disc == 'SUPERDISCOUNT':\n","    c = 20\n","\n","  elif sel  > 5000:\n","    c = 15\n","\n","  elif disc == 'SUPERDISCOUNT':\n","    c = 10\n","\n","  else:\n","    c = 0\n","\n","  sm = sm - ((sm//100) * c)\n","\n","  return f'Ваша скидка: {c}%', f'Итоговая сумма: {sm}'\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728749870778,"user_tz":-300,"elapsed":41059,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"9fa94c8d-7509-47e1-bcf1-df0f3fde194c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите стоимость единицы товара\n","6000\n","Введите количество товара\n","1\n","Введите промокод\n","SUPERDISCOUNT\n","Ваша скидка: 20 %\n","Итоговая сумма: 4800\n"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["#Этап 1\n","s = [int(i) for i in input().split()]\n","pos_num = [i for i in s if i > 0]\n","print(pos_num)\n","\n","#Этап 2\n","def filtr(s):\n","  return [i for i in s if i > 0]\n","\n","print(filtr(s))\n","\n","\n"],"metadata":{"id":"Xbi6bL0WOE9N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728749933864,"user_tz":-300,"elapsed":8653,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"5bc1fd29-b4ff-48d5-f23d-af3b92019a7f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-1 5 1 2 -3\n","[5, 1, 2]\n","[5, 1, 2]\n"]}]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":["#Этап 1\n","s = [int(i) for i in input().split()]\n","a = s[0]\n","b = s[1]\n","while a != 0 and b != 0:\n","  if a > b:\n","    a = a % b\n","  else:\n","    b = b % a\n","\n","if a > b:\n","  print(a)\n","else:\n","  print(b)\n","\n","#Этап 2\n","def alg(a, b):\n","  while a != 0 and b != 0:\n","        if a > b:\n","            a = a % b\n","        else:\n","            b = b % a\n","  if a > b:\n","    return a\n","  else:\n","    return b\n","\n","print(alg(30,18))"],"metadata":{"id":"43Dl5tIpOZsu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728749483815,"user_tz":-300,"elapsed":24112,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"deaae6ea-209a-4f7a-c83b-0af3fd13e782"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["30 18\n","6\n","6\n"]}]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["#Этап 1\n","s = [i for i in input().split()]\n","st = set(s)\n","k = 0\n","\n","for i in st:\n","  k = s.count(i)\n","  print(i + ':', k)\n","\n","#Этап 2\n","def counter(s):\n","  st = set(s)\n","  k = 0\n","  ans = []\n","\n","  for i in st:\n","    k = s.count(i)\n","    count = i + ': ' + str(k)\n","    ans.append(count)\n","\n","  return(ans)\n","\n","print(counter(s))\n","\n","\n"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728748829878,"user_tz":-300,"elapsed":17805,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"537c5951-0f71-4739-dff7-4b7de8f56370"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple\n","apple: 2\n","banana: 1\n","['apple: 2', 'banana: 1']\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":["#Этап 1\n","sp = [list(i) for i in input().split()]\n","ans = []\n","for s in sp:\n","    flag = True\n","    while flag:\n","        flag = False\n","        for i in range(len(s) - 1):\n","            if s[i] > s[i + 1]:\n","                temp = s[i]\n","                s[i] = s[i + 1]\n","                s[i + 1] = temp\n","                flag = True\n","    ans.append(''.join(s))\n","print(ans[0] == ans[1])\n","\n","#Этап 2\n","def detect(a, b):   # a - первая строка, b - вторая строка\n","  a, b = list(a), list(b)\n","  ans = []\n","  for s in a, b:\n","      flag = True\n","      while flag:\n","          flag = False\n","          for i in range(len(s) - 1):\n","              if s[i] > s[i + 1]:\n","                  temp = s[i]\n","                  s[i] = s[i + 1]\n","                  s[i + 1] = temp\n","                  flag = True\n","      ans.append(''.join(s))\n","  return ans[0] == ans[1]\n","\n","print(detect('listen', 'silent'))\n","\n","\n","\n"],"metadata":{"id":"7LNW8DuHQJwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728754421248,"user_tz":-300,"elapsed":6552,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"9656b79e-a018-4ac3-d62e-c1c84b1d2685"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["listen silent\n","True\n","True\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":["alphabet = 'abcdefghijklmnopqrstuvwxyz'\n","\n","#Этап 1\n","message = input('Введите сообщение, которое хотите зашифровать или расшифровать: ')\n","key = int(input('Введите значение сдвига: '))\n","condition = int(input('Введите \"1\" , если хотите зашифровать сообщение или введите \"2\", если хотите расшифровать сообщение: '))\n","\n","if condition == 1:\n","  encrypted_message = ''\n","  for letter in message:\n","    if letter not in alphabet:\n","      encrypted_message += letter\n","    else:\n","      index = alphabet.index(letter)\n","      encrypted_index = (index + key) % len(alphabet)\n","      encrypted_letter = alphabet[encrypted_index]\n","      encrypted_message += encrypted_letter\n","\n","  print('Зашифрованное сообщение:', encrypted_message)\n","\n","if condition == 2:\n","  decrypted_message = ''\n","  for letter in message:\n","    if letter not in alphabet:\n","      decrypted_message += letter\n","    else:\n","      index = alphabet.index(letter)\n","      decrypted_index = (index - key) % len(alphabet)\n","      decrypted_letter = alphabet[decrypted_index]\n","      decrypted_message += decrypted_letter\n","\n","  print('Расшифрованное сообщение:', decrypted_message)\n","\n","#Этап 2\n","\n","def cipher(message, key):\n","    encrypted_message = ''\n","    for letter in message:\n","        if letter not in alphabet:\n","            encrypted_message += letter\n","        else:\n","            index = alphabet.index(letter)\n","            encrypted_index = (index + key) % len(alphabet)\n","            encrypted_letter = alphabet[encrypted_index]\n","            encrypted_message += encrypted_letter\n","    return encrypted_message\n","\n","def decipher(encrypted_message, key):\n","    decrypted_message = ''\n","    for letter in encrypted_message:\n","        if letter not in alphabet:\n","            decrypted_message += letter\n","        else:\n","            index = alphabet.index(letter)\n","            decrypted_index = (index - key) % len(alphabet)\n","            decrypted_letter = alphabet[decrypted_index]\n","            decrypted_message += decrypted_letter\n","    return decrypted_message\n","\n","print(cipher('ceasar 123', 1))\n","print(decipher('dfbtbs 123', 1))\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"anThYirsQe6N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728758593301,"user_tz":-300,"elapsed":22252,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"878998de-9c6a-4477-b289-2ff85817038e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите сообщение, которое хотите зашифровать или расшифровать: ceasar 123\n","Введите значение сдвига: 1\n","Введите \"1\" , если хотите зашифровать сообщение или введите \"2\", если хотите расшифровать сообщение: 1\n","Зашифрованное сообщение: dfbtbs 123\n","dfbtbs 123\n","ceasar 123\n"]}]},{"cell_type":"markdown","source":["**Задача 6**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":["names = []\n","balances = []\n","\n","def creat_check(name, balance):\n","  names.append(name)\n","  balances.append(balance)\n","  return 'Счёт создан'\n","\n","def deposit_check(name, deposit):\n","  name_index = names.index(name)\n","  balances[name_index] += deposit\n","  return f'Счет {name} пополнен на {deposit}'\n","\n","def withdrawal_check(name, withdrawal):\n","  name_index = names.index(name)\n","  balances[name_index] -= withdrawal\n","  return f'Со счета {name} снято {withdrawal}'\n","\n","def get_balance(name):\n","  name_index = names.index(name)\n","  return f'Текущий баланс {name}: {balances[name_index]}'\n","\n","def transfer(from_, in_, sm):\n","  from_index = names.index(from_)\n","  in_index = names.index(in_)\n","  balances[from_index] -= sm\n","  balances[in_index] += sm\n","  return f'{from_} перевел {in_} {sm}'\n","\n","def banking_system(action):\n","    if action == 'creat_check':\n","      name = input('Введите имя держателя счета, который хотите создать: ')\n","      balance = int(input('Введите сумму, которую хотите положить на счёт: '))\n","      print(creat_check(name, balance))\n","\n","    if action == 'deposit_check':\n","      name = input('Введите имя держателя счета, на который совершается пополнение: ')\n","      deposit = int(input('Введите сумму, на которую вы хотите пополнить счёт: '))\n","      print(deposit_check(name, deposit))\n","\n","    if action == 'withdrawal_check':\n","      name = input('Введите имя держателя счета, c которого хотите снять сумму: ')\n","      withdrawal = int(input('Введите сумму, которую хотите снять со счёта: '))\n","      print(withdrawal_check(name, withdrawal))\n","\n","    if action == 'get_balance':\n","      name = input('Введите имя держателя счета, баланс которого вы хотите посмотреть: ')\n","      print(get_balance(name))\n","\n","    if action == 'transfer':\n","      from_ = input('Введите имя держателя счёта, c которого вы хотите совершить перевод: ')\n","      in_ = input('Введите имя держателя счёта, на который вы хотите совершить перевод: ')\n","      sm = int(input('Введите сумму перевода: '))\n","      print(transfer(from_, in_, sm))\n","\n","print(banking_system('creat_check'))\n","\n","print(banking_system('deposit_check'))\n","\n","print(banking_system('creat_check'))\n","\n","print(banking_system('transfer'))\n","\n","print(banking_system('get_balance'))\n","\n","print(banking_system('get_balance'))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dWEW10zIRwjs","executionInfo":{"status":"ok","timestamp":1729937019589,"user_tz":-300,"elapsed":55437,"user":{"displayName":"Аноним Анонимов","userId":"15875348424582677757"}},"outputId":"132af7cb-15f0-4347-9874-0885d3c88496"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя держателя счета, который хотите создать: John\n","Введите сумму, которую хотите положить на счёт: 200\n","Счёт создан\n","None\n","Введите имя держателя счета, на который совершается пополнение: John\n","Введите сумму, на которую вы хотите пополнить счёт: 300\n","Счет John пополнен на 300\n","None\n","Введите имя держателя счета, который хотите создать: Ben\n","Введите сумму, которую хотите положить на счёт: 100\n","Счёт создан\n","None\n","Введите имя держателя счёта, c которого вы хотите совершить перевод: John\n","Введите имя держателя счёта, на который вы хотите совершить перевод: Ben\n","Введите сумму перевода: 200\n","John перевел Ben 200\n","None\n","Введите имя держателя счета, баланс которого вы хотите посмотреть: John\n","Текущий баланс John: 300\n","None\n","Введите имя держателя счета, баланс которого вы хотите посмотреть: Ben\n","Текущий баланс Ben: 300\n","None\n"]}]}]}